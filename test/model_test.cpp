#include <Arduino.h>
#include <unity.h>
#include <esp_sleep.h>
#include <esp_task_wdt.h>

#include "suhu_sensor.h"
#include "ecg_sensor.h"
#include "fatigue_detection.h"
#include "svm_model_fatigue.h" 
#include "mqtt_handler.h"
#include "lowPower_handler.h"
#include "buzzer_notification.h"
#include "env.h"

float score(float * input) {
    return 2.3095324507445554 + (0.45679012345679015 * input[0] + 0.2307692307692264 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.382716049382716 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5432098765432098 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.37037037037037035 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.23456790123456783 * input[0] + 1.0 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5185185185185185 * input[0] + 0.6923076923076792 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.2307692307692264 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.07692307692309441 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.382716049382716 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.308641975308642 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.6172839506172838 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.6172839506172838 * input[0] + 0.5384615384615188 * input[1] + 0.8888888888889142 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.07692307692309441 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.6049382716049383 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.6923076923076792 * input[1] + 0.8888888888889142 * input[2]) * -10.0 + (0.5925925925925926 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.8461538461538396 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.6923076923076792 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.41975308641975306 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.3580246913580247 * input[0] + 0.3076923076923208 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.41975308641975306 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.07692307692309441 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.6172839506172838 * input[0] + 0.6923076923076792 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5555555555555556 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * -2.5875365449179535 + (0.3580246913580247 * input[0] + 0.3076923076923208 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.6666666666666667 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.37037037037037035 * input[0] + 0.2307692307692264 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.32098765432098764 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.28395061728395055 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.37037037037037035 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.654320987654321 * input[0] + 0.6153846153846132 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.33333333333333326 * input[0] + 0.6923076923076792 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.4320987654320987 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.28395061728395055 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.6049382716049383 * input[0] + 0.6153846153846132 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.308641975308642 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.382716049382716 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6666666666666667 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.37037037037037035 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.3950617283950617 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.33333333333333326 * input[0] + 0.8461538461538396 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.345679012345679 * input[0] + 0.3846153846153868 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.5061728395061729 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.33333333333333326 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.5185185185185185 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.3950617283950617 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5925925925925926 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6049382716049383 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5432098765432098 * input[0] + 0.3846153846153868 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.345679012345679 * input[0] + 0.2307692307692264 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.6923076923076792 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.23456790123456783 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.2592592592592593 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5555555555555556 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.6666666666666667 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.5384615384615188 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.6923076923076792 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.6666666666666667 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.18518518518518512 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.4691358024691358 * input[0] + 0.3846153846153868 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.5555555555555556 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5679012345679013 * input[0] + 0.2307692307692264 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.32098765432098764 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.07692307692309441 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.4444444444444444 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5432098765432098 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.6790123456790123 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.4320987654320987 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.5925925925925926 * input[0] + 0.07692307692309441 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5432098765432098 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6666666666666667 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.5432098765432098 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.345679012345679 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.2307692307692264 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5432098765432098 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.4444444444444444 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5061728395061729 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.3950617283950617 * input[0] + 0.3846153846153868 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5679012345679013 * input[0] + 0.07692307692309441 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.3076923076923208 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.6666666666666667 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.41975308641975306 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.4320987654320987 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.32098765432098764 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5555555555555556 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5679012345679013 * input[0] + 0.3076923076923208 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.6049382716049383 * input[0] + 0.6923076923076792 * input[1] + 0.8888888888889142 * input[2]) * -10.0 + (0.4814814814814814 * input[0] + 0.8461538461538396 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.5555555555555556 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.6153846153846132 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.8461538461538396 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.5925925925925926 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.3580246913580247 * input[0] + 0.6923076923076792 * input[1] + 0.8888888888889142 * input[2]) * -10.0 + (0.5185185185185185 * input[0] + 0.6153846153846132 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.3950617283950617 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.4320987654320987 * input[0] + 0.2307692307692264 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.5384615384615188 * input[1] + 0.8888888888889142 * input[2]) * -10.0 + (0.5061728395061729 * input[0] + 1.0 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.654320987654321 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5185185185185185 * input[0] + 0.8461538461538396 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.4320987654320987 * input[0] + 0.8461538461538396 * input[1] + 1.0 * input[2]) * -10.0 + (0.2962962962962963 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.24691358024691357 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.308641975308642 * input[0] + 0.3846153846153868 * input[1] + 0.0 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.4444444444444444 * input[0] + 0.07692307692309441 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.24691358024691357 * input[0] + 0.8461538461538396 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.49382716049382713 * input[0] + 0.5384615384615188 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.4691358024691358 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.45679012345679015 * input[0] + 0.07692307692309441 * input[1] + 0.11111111111111427 * input[2]) * -10.0 + (0.4444444444444444 * input[0] + 0.2307692307692264 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.5925925925925926 * input[0] + 0.6923076923076792 * input[1] + 0.0 * input[2]) * -10.0 + (0.6049382716049383 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * -10.0 + (0.382716049382716 * input[0] + 0.9230769230769056 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.5061728395061729 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.2716049382716049 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.6172839506172838 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5185185185185185 * input[0] + 0.3846153846153868 * input[1] + 0.6666666666666856 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.5802469135802468 * input[0] + 0.2307692307692264 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.2307692307692264 * input[1] + 0.22222222222222854 * input[2]) * -10.0 + (0.6296296296296295 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * -10.0 + (0.5308641975308641 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.6419753086419753 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * -10.0 + (0.40740740740740744 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.2716049382716049 * input[0] + 0.07692307692309441 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.6923076923076792 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.6153846153846132 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.382716049382716 * input[0] + 0.07692307692309441 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.3580246913580247 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.382716049382716 * input[0] + 0.2307692307692264 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.5061728395061729 * input[0] + 0.3846153846153868 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.33333333333333326 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.3846153846153868 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.5432098765432098 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.6666666666666667 * input[0] + 0.6923076923076792 * input[1] + 1.0 * input[2]) * 10.0 + (0.5555555555555556 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5555555555555556 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4320987654320987 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.5925925925925926 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5925925925925926 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.41975308641975306 * input[0] + 0.6923076923076792 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.37037037037037035 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.6172839506172838 * input[0] + 0.3846153846153868 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.3950617283950617 * input[0] + 0.07692307692309441 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.37037037037037035 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.6923076923076792 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.3950617283950617 * input[0] + 0.9230769230769056 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.345679012345679 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.3950617283950617 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.6790123456790123 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.6153846153846132 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.6296296296296295 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.33333333333333326 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.4320987654320987 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.32098765432098764 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.40740740740740744 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.33333333333333326 * input[0] + 0.6923076923076792 * input[1] + 0.6666666666666856 * input[2]) * 6.2610894388016884 + (0.6172839506172838 * input[0] + 0.3846153846153868 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.0 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.345679012345679 * input[0] + 0.6923076923076792 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.41975308641975306 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.5185185185185185 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5679012345679013 * input[0] + 0.8461538461538396 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.728395061728395 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.32098765432098764 * input[0] + 1.0 * input[1] + 0.11111111111111427 * input[2]) * 1.9139896102404244 + (0.3580246913580247 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.6419753086419753 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5061728395061729 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.41975308641975306 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5925925925925926 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.382716049382716 * input[0] + 0.3076923076923208 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.6666666666666667 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.5555555555555556 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.308641975308642 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5308641975308641 * input[0] + 0.9230769230769056 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.382716049382716 * input[0] + 0.2307692307692264 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.41975308641975306 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.3950617283950617 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.0 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.654320987654321 * input[0] + 0.2307692307692264 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.2592592592592593 * input[0] + 0.07692307692309441 * input[1] + 0.22222222222222854 * input[2]) * 4.412457495875837 + (0.345679012345679 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5432098765432098 * input[0] + 0.6153846153846132 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.5925925925925926 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.4320987654320987 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.6172839506172838 * input[0] + 0.6153846153846132 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.5432098765432098 * input[0] + 0.3076923076923208 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.6049382716049383 * input[0] + 0.5384615384615188 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.40740740740740744 * input[0] + 0.8461538461538396 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5802469135802468 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.7037037037037037 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5679012345679013 * input[0] + 0.3076923076923208 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.40740740740740744 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.5679012345679013 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5432098765432098 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.5384615384615188 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.5925925925925926 * input[0] + 0.6153846153846132 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.2307692307692264 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5308641975308641 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.3580246913580247 * input[0] + 0.3846153846153868 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.5679012345679013 * input[0] + 0.3076923076923208 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.40740740740740744 * input[0] + 0.6923076923076792 * input[1] + 0.0 * input[2]) * 10.0 + (0.6172839506172838 * input[0] + 0.8461538461538396 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.4691358024691358 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5061728395061729 * input[0] + 0.5384615384615188 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.3580246913580247 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.6923076923076792 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.6049382716049383 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.33333333333333326 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.3580246913580247 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.4320987654320987 * input[0] + 0.5384615384615188 * input[1] + 0.8888888888889142 * input[2]) * 10.0 + (0.5555555555555556 * input[0] + 0.6923076923076792 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.33333333333333326 * input[0] + 0.6153846153846132 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.40740740740740744 * input[0] + 0.6153846153846132 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.8148148148148147 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.345679012345679 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.5308641975308641 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.41975308641975306 * input[0] + 0.5384615384615188 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.5061728395061729 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5432098765432098 * input[0] + 0.8461538461538396 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.6049382716049383 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5185185185185185 * input[0] + 0.5384615384615188 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.308641975308642 * input[0] + 0.07692307692309441 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.37037037037037035 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.6419753086419753 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.6172839506172838 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5679012345679013 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4691358024691358 * input[0] + 0.6153846153846132 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5555555555555556 * input[0] + 0.3846153846153868 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.41975308641975306 * input[0] + 0.6153846153846132 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.4320987654320987 * input[0] + 0.6923076923076792 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.3950617283950617 * input[0] + 0.6153846153846132 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.5061728395061729 * input[0] + 0.8461538461538396 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.3950617283950617 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5432098765432098 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.0 * input[1] + 0.11111111111111427 * input[2]) * 10.0 + (0.5925925925925926 * input[0] + 0.2307692307692264 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.6049382716049383 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.345679012345679 * input[0] + 0.07692307692309441 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.6666666666666667 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.7037037037037037 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.40740740740740744 * input[0] + 0.8461538461538396 * input[1] + 0.6666666666666856 * input[2]) * 10.0 + (0.4444444444444444 * input[0] + 0.5384615384615188 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.345679012345679 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.654320987654321 * input[0] + 0.3076923076923208 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.4814814814814814 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.6153846153846132 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5802469135802468 * input[0] + 0.3076923076923208 * input[1] + 0.5555555555555713 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.6049382716049383 * input[0] + 0.3076923076923208 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.345679012345679 * input[0] + 0.3846153846153868 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.4691358024691358 * input[0] + 0.3846153846153868 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.5308641975308641 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.6172839506172838 * input[0] + 0.5384615384615188 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.32098765432098764 * input[0] + 0.5384615384615188 * input[1] + 0.3333333333333428 * input[2]) * 10.0 + (0.45679012345679015 * input[0] + 0.3076923076923208 * input[1] + 0.22222222222222854 * input[2]) * 10.0 + (0.49382716049382713 * input[0] + 0.3846153846153868 * input[1] + 0.4444444444444855 * input[2]) * 10.0 + (0.5308641975308641 * input[0] + 0.6923076923076792 * input[1] + 0.3333333333333428 * input[2]) * 10.0;
}


float normalize(float val, float min_val, float max_val) {
    return (val - min_val) / (max_val - min_val);
}

bool Inferensi(float bpm, float body_temp, float ambient_temp_val) {
    // Normalisasi input
    float bpm_norm = normalize(bpm, 30.0, 128.0);
    float body_temp_norm = normalize(body_temp, 35.13, 35.63);
    float ambient_temp_norm = normalize(ambient_temp_val, 31.81, 35.05);
    
    // Input data untuk inferensi
    float input_data[3] = {bpm_norm, body_temp_norm, ambient_temp_norm};
    
    // Melakukan inferensi dengan model
    float result = score(input_data);
    
    // Tentukan apakah deteksi kelelahan
    bool fatigue = (result >= 0.5) ? true : false;

    // Tampilkan hasil di serial monitor
    Serial.print("Fatigue Detected: ");
    Serial.println(fatigue ? "YES" : "NO");

    delay(2000); // Delay sebelum pengulangan berikutnya
    return fatigue;
}



void test_inferensi_fatigue() {
    float input [3] = {60.4,32.49,35.57};
    float bpm = input[0]; 
    float body_temp = input[1];
    float ambient_temp = input[2];

    bool hasil = Inferensi(bpm, body_temp, ambient_temp);
    TEST_ASSERT_FALSE(hasil);  // Harusnya false
}

void test_inferensi_normal() {
    float input [3] = {60.4,35.49,35.57};
    float bpm = input[0]; 
    float body_temp = input[1];
    float ambient_temp = input[2];

    bool hasil = Inferensi(bpm, body_temp, ambient_temp);
    TEST_ASSERT_TRUE(hasil); // Harusnya true
}

void setup() {
    delay(2000); // untuk serial
    UNITY_BEGIN();
    RUN_TEST(test_inferensi_fatigue);
    RUN_TEST(test_inferensi_normal);
    UNITY_END();
}

void loop() {
    
}

